# Generated by Django 5.0.6 on 2024-05-19 14:17

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Continent',
                'verbose_name_plural': 'Continents',
            },
        ),
        migrations.CreateModel(
            name='GeographicEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('entity_type', models.CharField(choices=[('country', 'Country'), ('region', 'Region'), ('locality', 'Locality')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mass', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('radius', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Planet',
                'verbose_name_plural': 'Planets',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('iso_alpha2', models.CharField(blank=True, max_length=2)),
                ('iso_alpha3', models.CharField(blank=True, max_length=3)),
                ('iso_numeric', models.IntegerField(blank=True, null=True)),
                ('area', models.FloatField(null=True)),
                ('capital', models.CharField(blank=True, max_length=100, null=True)),
                ('official_languages', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=50, null=True)),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='geography.continent')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='AdministrativeDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('iso_alpha2', models.CharField(blank=True, choices=[('AR', 'AR - Administrative Region'), ('PR', 'PR - Province'), ('DT', 'DT - District'), ('ST', 'ST - State'), ('CT', 'CT - County'), ('CN', 'CN - Canton'), ('RG', 'RG - Region'), ('DP', 'DP - Department'), ('MT', 'MT - Municipality'), ('TP', 'TP - Territory'), ('BR', 'BR - Borough'), ('SD', 'SD - Subdistrict'), ('VS', 'VS - Village'), ('TL', 'TL - Townland')], max_length=3)),
                ('iso_alpha3', models.CharField(blank=True, choices=[('ARR', 'ARR - Administrative Region'), ('PRV', 'PRV - Province'), ('DIS', 'DIS - District'), ('STA', 'STA - State'), ('COU', 'COU - County'), ('CAN', 'CAN - Canton'), ('REG', 'REG - Region'), ('DEP', 'DEP - Department'), ('MUN', 'MUN - Municipality'), ('TER', 'TER - Territory'), ('BOR', 'BOR - Borough'), ('SUB', 'SUB - Subdistrict'), ('VIL', 'VIL - Village'), ('TWN', 'TWN - Townland')], max_length=3)),
                ('iso_numeric', models.IntegerField(blank=True, choices=[(1, '1 - Administrative Region'), (2, '2 - Province'), (3, '3 - District'), (4, '4 - State'), (5, '5 - County'), (6, '6 - Canton'), (7, '7 - Region'), (8, '8 - Department'), (9, '9 - Municipality'), (10, '10 - Territory'), (11, '11 - Borough'), (12, '12 - Subdistrict'), (13, '13 - Village'), (14, '14 - Townland')], null=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('parent_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subdivisions', to='geography.administrativedivision')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geography.country')),
            ],
            options={
                'verbose_name': 'Administrative Division',
                'verbose_name_plural': 'Administrative Divisions',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='geography.geographicentity')),
            ],
            options={
                'unique_together': {('location',)},
            },
        ),
    ]
